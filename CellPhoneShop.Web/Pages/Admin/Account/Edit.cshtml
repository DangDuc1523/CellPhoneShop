@page "{id:int}"
@model CellPhoneShop.Web.Pages.Accounts.EditModel
@{
    ViewData["Title"] = "Accounts Edit";
    Layout = "_AdminLayout";
}
<style>
    * {
        box-sizing: border-box;
    }

    .edit-account-container {
        max-width: 900px;
        margin: 20px auto;
        background: #ffffff;
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        border: 1px solid #e5e7eb;
    }

    .edit-account-header {
        background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
        color: white;
        padding: 30px 40px;
        text-align: center;
        position: relative;
    }

        .edit-account-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
            opacity: 0.3;
        }

        .edit-account-header h2 {
            font-size: 28px;
            font-weight: 600;
            position: relative;
            z-index: 1;
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

    .edit-account-form {
        padding: 40px;
    }

    .form-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 25px;
    }

    @@media (min-width: 768px) {
        .form-grid {
            grid-template-columns: 1fr 1fr;
        }

        .form-group.full-width {
            grid-column: 1 / -1;
        }
    }

    .form-section {
        margin-bottom: 35px;
    }

    .section-title {
        font-size: 18px;
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 2px solid #e5e7eb;
        position: relative;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

        .section-title::before {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 50px;
            height: 2px;
            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
        }

    .form-group {
        position: relative;
        opacity: 0;
        transform: translateY(20px);
        animation: slideInUp 0.6s ease forwards;
    }

        .form-group:nth-child(1) {
            animation-delay: 0.1s;
        }

        .form-group:nth-child(2) {
            animation-delay: 0.2s;
        }

        .form-group:nth-child(3) {
            animation-delay: 0.3s;
        }

        .form-group:nth-child(4) {
            animation-delay: 0.4s;
        }

        .form-group:nth-child(5) {
            animation-delay: 0.5s;
        }

        .form-group:nth-child(6) {
            animation-delay: 0.6s;
        }

    @@keyframes slideInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .form-group label {
        display: block;
        font-weight: 600;
        color: #374151;
        margin-bottom: 8px;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .form-control {
        width: 100%;
        padding: 15px 20px;
        border: 2px solid #e5e7eb;
        border-radius: 12px;
        font-size: 16px;
        background: #f9fafb;
        transition: all 0.3s ease;
        outline: none;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

        .form-control:focus {
            border-color: #4f46e5;
            background: #ffffff;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
            transform: translateY(-2px);
        }

        .form-control:hover {
            border-color: #d1d5db;
            background: #ffffff;
        }

    .text-danger {
        color: #ef4444;
        font-size: 12px;
        margin-top: 5px;
        display: block;
        font-weight: 500;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .button-group {
        display: flex;
        gap: 15px;
        justify-content: center;
        margin-top: 40px;
        flex-wrap: wrap;
    }

    .btn {
        padding: 15px 30px;
        border: none;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        min-width: 140px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .btn-primary {
        background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(79, 70, 229, 0.4);
    }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(79, 70, 229, 0.6);
            text-decoration: none;
            color: white;
        }

    .btn-secondary {
        background: #6b7280;
        color: white;
        box-shadow: 0 4px 15px rgba(107, 114, 128, 0.4);
    }

        .btn-secondary:hover {
            background: #4b5563;
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(107, 114, 128, 0.6);
            text-decoration: none;
            color: white;
        }

    .btn:active {
        transform: scale(0.98);
    }

    .btn:focus {
        outline: 2px solid #4f46e5;
        outline-offset: 2px;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .edit-account-container {
            margin: 10px;
            border-radius: 15px;
        }

        .edit-account-header {
            padding: 25px 20px;
        }

            .edit-account-header h2 {
                font-size: 24px;
            }

        .edit-account-form {
            padding: 30px 20px;
        }

        .button-group {
            flex-direction: column;
            align-items: center;
        }

        .btn {
            width: 100%;
            max-width: 300px;
        }
    }
</style>

<div class="edit-account-container">
    <div class="edit-account-header">
        <h2>Edit Account</h2>
    </div>

    <div class="edit-account-form">
        <form method="post">
            <input type="hidden" asp-for="Id" />

            <div class="form-section">
                <h3 class="section-title">Personal Information</h3>
                <div class="form-grid">
                    <div class="form-group full-width">
                        <label asp-for="accountNew.FullName"></label>
                        <input asp-for="accountNew.FullName" class="form-control" placeholder="Enter full name" />
                        <span asp-validation-for="accountNew.FullName" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="accountNew.Phone"></label>
                        <input asp-for="accountNew.Phone" class="form-control" placeholder="Enter phone number" />
                    </div>
                </div>
            </div>

            <div class="form-section">
                <h3 class="section-title">Address</h3>
                <div class="form-grid">
                    <div class="form-group full-width">
                        <label asp-for="accountNew.AddressDetail"></label>
                        <input asp-for="accountNew.AddressDetail" class="form-control" placeholder="House number, street name..." />
                        <span asp-validation-for="accountNew.AddressDetail" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="accountNew.ProvinceId"></label>
                        <select asp-for="accountNew.ProvinceId" id="provinceSelect" class="form-control">
                            <option value="">-- Select Province/City --</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label asp-for="accountNew.DistrictId"></label>
                        <select asp-for="accountNew.DistrictId" id="districtSelect" class="form-control">
                            <option value="">-- Select District --</option>
                        </select>
                    </div>

                    <div class="form-group full-width">
                        <label asp-for="accountNew.WardId"></label>
                        <select asp-for="accountNew.WardId" id="wardSelect" class="form-control">
                            <option value="">-- Select Ward/Commune --</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="button-group">
                <button type="submit" class="btn btn-primary" id="saveBtn">
                    💾 Save Changes
                </button>
                <a asp-page="Index" class="btn btn-secondary">
                    ↩️ Back to List
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const provinceSelect = document.getElementById("provinceSelect");
            const districtSelect = document.getElementById("districtSelect");
            const wardSelect = document.getElementById("wardSelect");

            const selectedProvinceId = '@Model.accountNew.ProvinceId';
            const selectedDistrictId = '@Model.accountNew.DistrictId';
            const selectedWardId = '@Model.accountNew.WardId';

            // Load province list
            fetch("https://provinces.open-api.vn/api/p/")
                .then(res => res.json())
                .then(provinces => {
                    provinces.forEach(p => {
                        const option = new Option(p.name, p.code);
                        if (p.code == selectedProvinceId) option.selected = true;
                        provinceSelect.appendChild(option);
                    });

                    // After loading provinces, load districts if selected
                    if (selectedProvinceId) {
                        fetch(`https://provinces.open-api.vn/api/p/${selectedProvinceId}?depth=2`)
                            .then(res => res.json())
                            .then(province => {
                                province.districts.forEach(d => {
                                    const option = new Option(d.name, d.code);
                                    if (d.code == selectedDistrictId) option.selected = true;
                                    districtSelect.appendChild(option);
                                });

                                // After loading districts, load wards if selected
                                if (selectedDistrictId) {
                                    fetch(`https://provinces.open-api.vn/api/d/${selectedDistrictId}?depth=2`)
                                        .then(res => res.json())
                                        .then(district => {
                                            district.wards.forEach(w => {
                                                const option = new Option(w.name, w.code);
                                                if (w.code == selectedWardId) option.selected = true;
                                                wardSelect.appendChild(option);
                                            });
                                        });
                                }
                            });
                    }
                });

            // When selecting province, load districts
            provinceSelect.addEventListener("change", function () {
                const provinceCode = this.value;
                districtSelect.innerHTML = '<option value="">-- Select District --</option>';
                wardSelect.innerHTML = '<option value="">-- Select Ward/Commune --</option>';

                if (!provinceCode) return;

                fetch(`https://provinces.open-api.vn/api/p/${provinceCode}?depth=2`)
                    .then(res => res.json())
                    .then(province => {
                        province.districts.forEach(d => {
                            const option = new Option(d.name, d.code);
                            districtSelect.appendChild(option);
                        });
                    });
            });

            // When selecting district, load wards
            districtSelect.addEventListener("change", function () {
                const districtCode = this.value;
                wardSelect.innerHTML = '<option value="">-- Select Ward/Commune --</option>';

                if (!districtCode) return;

                fetch(`https://provinces.open-api.vn/api/d/${districtCode}?depth=2`)
                    .then(res => res.json())
                    .then(district => {
                        district.wards.forEach(w => {
                            const option = new Option(w.name, w.code);
                            wardSelect.appendChild(option);
                        });
                    });
            });
        });
    </script>
}




    <script>
        // Thêm hiệu ứng loading cho form submission
        document.querySelector('form').addEventListener('submit', function (e) {
            const submitBtn = document.getElementById('saveBtn');
            submitBtn.innerHTML = '⏳ Đang lưu...';
            submitBtn.disabled = true;
        });

        // Thêm hiệu ứng cho input focus
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('focus', function () {
                this.parentElement.style.transform = 'scale(1.02)';
            });

            input.addEventListener('blur', function () {
                this.parentElement.style.transform = 'scale(1)';
            });
        });
    </script>
}