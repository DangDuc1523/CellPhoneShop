@page
@model CellPhoneShop.Web.Pages.Customer.Profile.ProfileModel
@{
    ViewData["Title"] = "Tài Khoản Của Tôi";
    Layout = "_CustomerLayout";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

<style>


    .profile-container {
        max-width: 1200px;
        margin: 20px auto;
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        backdrop-filter: blur(10px);
    }

    .profile-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        text-align: center;
        position: relative;
    }

        .profile-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="80" cy="30" r="1.5" fill="rgba(255,255,255,0.1)"/><circle cx="40" cy="70" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="90" cy="80" r="2.5" fill="rgba(255,255,255,0.1)"/></svg>');
        }

        .profile-header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            position: relative;
            z-index: 2;
        }

        .profile-header p {
            font-size: 1.1em;
            opacity: 0.9;
            position: relative;
            z-index: 2;
        }

    .profile-main {
        display: grid;
        grid-template-columns: 300px 1fr;
        gap: 0;
        min-height: 600px;
    }

    .profile-sidebar {
        background: #f8f9fa;
        padding: 30px 0;
        border-right: 1px solid #e9ecef;
    }

    .profile-info {
        text-align: center;
        padding: 0 30px 30px;
        border-bottom: 1px solid #e9ecef;
        margin-bottom: 20px;
    }

    .profile-avatar {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 15px;
        font-size: 2.5em;
        color: white;
        box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
    }

    .profile-info h3 {
        color: #2c3e50;
        margin-bottom: 5px;
        font-size: 1.3em;
    }

    .profile-info p {
        color: #6c757d;
        font-size: 0.9em;
    }

    .profile-menu {
        list-style: none;
        padding: 0 20px;
    }

    .profile-menu-item {
        margin-bottom: 5px;
    }

    .profile-menu-link {
        display: flex;
        align-items: center;
        padding: 15px 20px;
        color: #495057;
        text-decoration: none;
        border-radius: 12px;
        transition: all 0.3s ease;
        font-weight: 500;
    }

        .profile-menu-link:hover,
        .profile-menu-link.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            transform: translateX(5px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
            text-decoration: none;
        }

        .profile-menu-link i {
            margin-right: 12px;
            font-size: 1.1em;
            width: 20px;
            text-align: center;
        }

    .profile-content {
        padding: 40px;
        background: white;
    }

    .profile-section {
        display: none;
    }

        .profile-section.active {
            display: block;
            animation: fadeInUp 0.5s ease;
        }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .section-title {
        font-size: 2em;
        color: #2c3e50;
        margin-bottom: 30px;
        display: flex;
        align-items: center;
    }

        .section-title i {
            margin-right: 15px;
            color: #667eea;
        }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 25px;
        margin-bottom: 30px;
    }

    .info-card {
        background: #f8f9fa;
        padding: 25px;
        border-radius: 15px;
        border-left: 4px solid #667eea;
        transition: transform 0.3s ease;
    }

        .info-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

        .info-card h4 {
            color: #495057;
            margin-bottom: 10px;
            font-size: 1.1em;
        }

        .info-card p {
            color: #6c757d;
            font-size: 1.1em;
            font-weight: 500;
        }

    .btn-custom {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        cursor: pointer;
        font-size: 1em;
        font-weight: 500;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        margin-right: 10px;
        margin-bottom: 10px;
    }

        .btn-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
            color: white;
            text-decoration: none;
        }

        .btn-custom i {
            margin-right: 8px;
        }

    .btn-secondary {
        background: #6c757d;
    }

    .btn-danger {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
    }

    .order-card, .history-card {
        background: white;
        border: 1px solid #e9ecef;
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 20px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease;
    }

        .order-card:hover, .history-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        flex-wrap: wrap;
    }

    .order-id {
        font-weight: bold;
        color: #667eea;
        font-size: 1.1em;
    }

    .order-status {
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 0.9em;
        font-weight: 500;
    }

    .status-completed {
        background: #d4edda;
        color: #155724;
    }

    .status-processing {
        background: #fff3cd;
        color: #856404;
    }

    .status-shipped {
        background: #cce5ff;
        color: #004085;
    }

    .form-group {
        margin-bottom: 25px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #495057;
            font-weight: 500;
        }

        .form-group input, .form-group select {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 1em;
            transition: border-color 0.3s ease;
        }

            .form-group input:focus, .form-group select:focus {
                outline: none;
                border-color: #667eea;
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            }

    .alert-custom {
        padding: 15px 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
    }

        .alert-custom i {
            margin-right: 10px;
            font-size: 1.2em;
        }

    .alert-warning {
        background: #fff3cd;
        color: #856404;
        border-left: 4px solid #ffc107;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 25px;
        border-radius: 15px;
        text-align: center;
        box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
    }

    .stat-number {
        font-size: 2.5em;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 1em;
        opacity: 0.9;
    }

    @@media (max-width: 768px) {
        .profile-main {
            grid-template-columns: 1fr;
        }

        .profile-sidebar {
            border-right: none;
            border-bottom: 1px solid #e9ecef;
        }

        .profile-content {
            padding: 20px;
        }

        .info-grid {
            grid-template-columns: 1fr;
        }

        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }
</style>

<div class="profile-container">
    <div class="profile-header">
        <h1>My Account</h1>
        <p>Manage personal information and shopping activity</p>
    </div>

    <div class="profile-main">
        <div class="profile-sidebar">
            <div class="profile-info">
                <div class="profile-avatar">
                    <i class="fas fa-user"></i>
                </div>
                <h3>Hello, @Model.Accounts.FullName</h3>
                <p>@Model.Accounts.Email</p>
            </div>

            <ul class="profile-menu">
                <li class="profile-menu-item">
                    <a href="#" class="profile-menu-link active" data-section="profile">
                        <i class="fas fa-user-circle"></i>
                        Personal Information
                    </a>
                </li>
                <li class="profile-menu-item">
                    <a href="#" class="profile-menu-link" data-section="orders">
                        <i class="fas fa-shopping-bag"></i>
                        My Orders
                    </a>
                </li>
                <li class="profile-menu-item">
                    <a href="#" class="profile-menu-link" data-section="history">
                        <i class="fas fa-history"></i>
                        Purchase History
                    </a>
                </li>
                <li class="profile-menu-item">
                    <a href="#" class="profile-menu-link" data-section="password">
                        <i class="fas fa-lock"></i>
                        Change Password
                    </a>
                </li>
                <li class="profile-menu-item">
                    <a href="#" class="profile-menu-link" data-section="delete">
                        <i class="fas fa-user-times"></i>
                        Delete Account
                    </a>
                </li>
            </ul>
        </div>

        <div class="profile-content">
            <!-- Personal Information -->
            <div class="profile-section active" id="profile">
                <h2 class="section-title">
                    <i class="fas fa-user-circle"></i>
                    Personal Information
                </h2>

                <div class="info-grid">
                    <div class="info-card">
                        <h4>Full Name</h4>
                        <p>@Model.Accounts.FullName</p>
                    </div>
                    <div class="info-card">
                        <h4>Email</h4>
                        <p>@Model.Accounts.Email</p>
                    </div>
                    <div class="info-card">
                        <h4>Phone</h4>
                        <p>@Model.Accounts.Phone</p>
                    </div>
                    <div class="info-card">
                        <h4>Address</h4>
                        <p>@Model.Accounts.AddressDetail</p>
                    </div>
                    <div class="info-card">
                        <h4>Role</h4>
                        @if (Model.Accounts.Role == 1)
                        {
                            <p>Admin</p>
                        }
                        else if (Model.Accounts.Role == 2)
                        {
                            <p>Staff</p>
                        }
                        else
                        {
                            <p>Customer</p>
                        }
                    </div>
                    <div class="info-card">
                        <h4>Status</h4>
                        @if (Model.Accounts.Status == 1)
                        {
                            <p>Active</p>
                        }
                        else
                        {
                            <p>Deactive</p>
                        }
                    </div>
                </div>
                <input type="hidden" id="user-id" value="@Model.Accounts.UserId" />
                <a href="~/Customer/Profile/EditProfile/EditProfile" class="btn-custom" onclick="goToEditPage()">
                    <i class="fas fa-edit"></i>
                    Edit Information
                </a>
            </div>

            <!-- Orders -->
            <div class="profile-section" id="orders">
                <h2 class="section-title">
                    <i class="fas fa-shopping-bag"></i>
                    My Orders
                </h2>

                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-number">@Model.complete</div>
                        <div class="stat-label">Completed Orders</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">@Model.request</div>
                        <div class="stat-label">Processing</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">@Model.shipping</div>
                        <div class="stat-label">Shipping</div>
                    </div>
                </div>

                @foreach (var item in Model.Carts)
                {
                    <div class="order-card">
                        <div class="order-header">
                            @if (@item.Status == 0)
                            {
                                <span class="order-status status-">Pending</span>
                            }
                            @if (@item.Status == 1)
                            {
                                <span class="order-status status-">Processing</span>
                            }
                            @if (@item.Status == 3)
                            {
                                <span class="order-status status-">Delivered</span>
                            }
                            @if (@item.Status == 4)
                            {
                                <span class="order-status status-">Cancelled</span>
                            }
                            @if (@item.Status == 2)
                            {
                                <span class="order-status status-">Shipped</span>
                            }
                        </div>
                        <p><strong>Order Date:</strong> @item.OrderDate</p>
                        <p><strong>Total:</strong> @item.TotalAmount VND</p>
                        <a href="~/Customer/Orders/" class="btn-custom" style="margin-top: 10px;">
                            <i class="fas fa-eye"></i>
                            View Details
                        </a>
                    </div>
                }
                @if (@Model.Carts == null)
                {
                    <div class="alert-custom alert-warning">
                        <i class="fas fa-info-circle"></i>
                        <div>You have no orders yet.</div>
                    </div>
                }
            </div>

            <!-- Purchase History -->
            <div class="profile-section" id="history">
                <h2 class="section-title">
                    <i class="fas fa-history"></i>
                    Purchase History
                </h2>

                @foreach (var item in Model.CartsComplete)
                {
                    <div class="history-card">
                        <div class="order-header">
                            <span class="order-id"></span>
                            <span class="order-status status-completed">Completed</span>
                        </div>
                        <p><strong>Order Date:</strong> @item.OrderDate</p>
                        <p><strong>Total:</strong> @item.TotalAmount VND</p>
                        <a href="~/Customer/Orders/" class="btn-custom btn-secondary" style="margin-top: 10px;">
                            <i class="fas fa-download"></i>
                            Download Invoice
                        </a>
                        <a href="~/Customer/Orders/" class="btn-custom" style="margin-top: 10px;">
                            <i class="fas fa-star"></i>
                            Review Products
                        </a>
                    </div>
                }
                @if (@Model.CartsComplete == null)
                {
                    <div class="alert-custom alert-warning">
                        <i class="fas fa-info-circle"></i>
                        <div>You have no purchase history.</div>
                    </div>
                }
            </div>

            <!-- Change Password -->
            <div class="profile-section" id="password">
                <h2 class="section-title">
                    <i class="fas fa-lock"></i>
                    Change Password
                </h2>

                <form method="post" asp-page-handler="ChangePassword" style="max-width: 500px;">
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <p>@error.ErrorMessage</p>
                            }
                        </div>
                    }
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">
                            @TempData["SuccessMessage"]
                        </div>
                    }

                    <div class="form-group">
                        <label for="CurrentPassword">Current Password</label>
                        <input type="password" id="CurrentPassword" name="ChangePassword.CurrentPassword" required>
                    </div>
                    <div class="form-group">
                        <label for="NewPassword">New Password</label>
                        <input type="password" id="NewPassword" name="ChangePassword.NewPassword" required>
                    </div>
                    <div class="form-group">
                        <label for="ConfirmPassword">Confirm New Password</label>
                        <input type="password" id="ConfirmPassword" name="ChangePassword.ConfirmPassword" required>
                    </div>
                    <button type="submit" class="btn-custom">
                        <i class="fas fa-save"></i>
                        Update Password
                    </button>
                </form>
            </div>

            <!-- Delete Account -->
            <div class="profile-section" id="delete">
                <h2 class="section-title">
                    <i class="fas fa-user-times"></i>
                    Delete Account
                </h2>

                <div class="alert-custom alert-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    <div>
                        <strong>Warning:</strong> Account deletion cannot be undone. All your data will be permanently removed.
                    </div>
                </div>

                <form method="post" asp-page-handler="DeleteAccount" style="max-width: 500px;">
                    <h4 style="margin-bottom: 15px; color: #495057;">Reason for deleting your account:</h4>
                    <div class="form-group">
                        <span>ID: @Model.usId</span>
                        <select id="DeleteReason" name="DeleteReason" required>
                            <option value="">Select a reason</option>
                            <option value="no-longer-use">No longer using the service</option>
                            <option value="privacy-concerns">Privacy concerns</option>
                            <option value="poor-service">Poor service</option>
                            <option value="other">Other reasons</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="DeleteConfirm">Type "DELETE ACCOUNT" to confirm:</label>
                        <input type="text" id="DeleteConfirm" name="DeleteConfirm" placeholder="DELETE ACCOUNT" required>
                    </div>
                    <button type="submit" class="btn-custom btn-danger" id="deleteBtn" disabled>
                        <i class="fas fa-trash"></i>
                        Permanently Delete Account
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.profile-menu-link').forEach(link => {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelectorAll('.profile-menu-link').forEach(l => l.classList.remove('active'));
                document.querySelectorAll('.profile-section').forEach(s => s.classList.remove('active'));
                this.classList.add('active');
                const sectionId = this.getAttribute('data-section');
                document.getElementById(sectionId).classList.add('active');
            });
        });

        const deleteConfirmInput = document.getElementById('DeleteConfirm');
        const deleteBtn = document.getElementById('deleteBtn');

        if (deleteConfirmInput && deleteBtn) {
            deleteConfirmInput.addEventListener('input', function () {
                if (this.value === 'DELETE ACCOUNT') {
                    deleteBtn.disabled = false;
                    deleteBtn.style.opacity = '1';
                } else {
                    deleteBtn.disabled = true;
                    deleteBtn.style.opacity = '0.5';
                }
            });

            deleteBtn.addEventListener('click', function (e) {
                if (!confirm('Are you sure you want to delete your account? This action cannot be undone!')) {
                    e.preventDefault();
                }
            });
        }

        const passwordForm = document.querySelector('form[asp-page-handler="ChangePassword"]');
        if (passwordForm) {
            passwordForm.addEventListener('submit', function (e) {
                const newPassword = document.getElementById('NewPassword').value;
                const confirmPassword = document.getElementById('ConfirmPassword').value;

                if (newPassword !== confirmPassword) {
                    e.preventDefault();
                    alert('Confirm password does not match!');
                    return;
                }

                if (newPassword.length < 6) {
                    e.preventDefault();
                    alert('New password must be at least 6 characters!');
                    return;
                }
            });
        }

        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        document.querySelectorAll('.info-card, .order-card, .history-card').forEach(card => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            observer.observe(card);
        });
    });
</script>



